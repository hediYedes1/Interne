{% extends 'base.html.twig' %}

{% block title %}Face Login{% endblock %}

{% block body %}
<div class="auth-main">
    <div class="auth-wrapper v3">
        <div class="auth-form">
            <div class="auth-header">
                <a href="#"><img src="images/logo-dark.svg" alt="img"></a>
            </div>
            <div class="card my-5">
                <div class="card-body">
                    <h3 class="mb-4"><b>Login with Face ID</b></h3>
                    
                    <div class="face-preview mb-4">
                        <video id="video" width="100%" autoplay></video>
                        <canvas id="canvas" style="display:none;"></canvas>
                    </div>
                    
                    <button id="capture" class="btn btn-primary w-100">Capture & Login</button>
                    
                    <div class="saprator my-4">
                        <span>OR</span>
                    </div>
                    
                    <a href="{{ path('app_login') }}" class="btn btn-outline-primary w-100">
                        Use traditional login
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const captureBtn = document.getElementById('capture');
    
    // Access camera
    navigator.mediaDevices.getUserMedia({ video: true })
        .then(stream => {
            video.srcObject = stream;
        })
        .catch(err => {
            console.error("Error accessing camera:", err);
            alert("Could not access camera. Please check permissions.");
        });
    
    // Capture image
    captureBtn.addEventListener('click', () => {
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
        const imageData = canvas.toDataURL('image/jpeg');
        
        fetch('{{ path("app_face_login") }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ image_url: imageData })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.location.href = data.redirect;
            } else {
                alert(data.error || 'Login failed. Please try again.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred. Please try again.');
        });
    });
});
</script>
{% endblock %}