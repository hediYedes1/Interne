{% extends 'base1.html.twig' %}

{% block title %}Passer le Quiz - {{ testtechnique.titretesttechnique }}{% endblock %}
{% block css %}
{{ parent() }}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<style>
    .question {
        margin-bottom: 2rem;
        padding-bottom: 1rem;
    }
    .answers {
        margin-left: 1.5rem;
    }
    .form-check {
        margin-bottom: 0.5rem;
    }
    .text-success {
        color: #28a745;
    }
    .text-danger {
        color: #dc3545;
    }
</style>
{% endblock %}

{% block body %}
<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h4 class="m-0 font-weight-bold text-primary">
                Quiz: {{ testtechnique.titretesttechnique }}
                <span class="float-right">Score: <span id="score-display">0</span>/{{ testtechnique.questions|length }}</span>
            </h4>
        </div>
        <div class="card-body">
            <form id="quiz-form" action="{{ path('quiz_submit') }}" method="POST">
                <input type="hidden" name="test_id" value="{{ testtechnique.idtesttechnique }}">
                
                {% for question in testtechnique.questions %}
                <div class="question mb-4">
                    <h5>Question {{ loop.index }}: {{ question.question }}</h5>
                    
                    {% if question.description is defined and question.description %}
                        <p class="text-muted">{{ question.description }}</p>
                    {% endif %}
                    
                    <div class="answers">
                        {% for key, answer in question.answers %}
                            {% if answer %}
                            <div class="form-check">
                                <input class="form-check-input" type="radio" 
                                       name="answers[{{ loop.parent.loop.index0 }}]" 
                                       id="q{{ loop.parent.loop.index0 }}_a{{ loop.index0 }}" 
                                       value="{{ key }}"
                                       required>
                                <label class="form-check-label" for="q{{ loop.parent.loop.index0 }}_a{{ loop.index0 }}">
                                    {{ answer }}
                                </label>
                            </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                    
                    <div class="feedback mt-3" style="display: none;">
                        {% if question.explanation is defined and question.explanation %}
                            <div class="alert alert-info">{{ question.explanation }}</div>
                        {% endif %}
                        
                        {% if question.tip is defined and question.tip %}
                            <div class="alert alert-warning"><strong>Astuce:</strong> {{ question.tip }}</div>
                        {% endif %}
                    </div>
                </div>
                <hr>
                {% endfor %}
                
                <div class="text-center">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="fas fa-paper-plane"></i> Soumettre le quiz
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
$(document).ready(function() {
    $('#quiz-form').on('submit', function(e) {
        e.preventDefault();
        
        const $form = $(this);
        const $submitBtn = $form.find('button[type="submit"]');
        $submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Processing...');

        // Construction des réponses avec vérification
        const answers = {};
        let valid = true;
        
        $('input[type="radio"]:checked').each(function() {
            const name = $(this).attr('name');
            const match = name.match(/answers\[(\d+)\]/);
            
            if (!match) {
                console.error("Invalid input name:", name);
                valid = false;
                return;
            }
            
            answers[match[1]] = $(this).val();
        });

        if (!valid) {
            Swal.fire('Erreur', 'Format de réponse invalide', 'error');
            $submitBtn.prop('disabled', false).html('Soumettre');
            return;
        }

        // Debug avant envoi
        console.log("Submitting:", {
            test_id: $('input[name="test_id"]').val(),
            answers: answers
        });

        $.ajax({
            url: $form.attr('action'),
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                test_id: $('input[name="test_id"]').val(),
                answers: answers
            }),
            dataType: 'json'
        })
        .done(function(response) {
            console.log("Full response:", response);
            
            if (response.success) {
                $('#score-display').text(response.score);
                $('.feedback').show();
                
                Swal.fire({
                    title: 'Résultats',
                    html: `Bonnes réponses: <b>${response.score}/${response.total}</b><br>
                           Statut: <b class="${response.statut === 'ACCEPTE' ? 'text-success' : 'text-danger'}">
                           ${response.statut}</b>`,
                    icon: 'success'
                });
            } else {
                Swal.fire('Erreur', response.error || 'Erreur inconnue', 'error');
            }
        })
        .fail(function(xhr) {
            console.error("AJAX Error:", xhr.responseText);
            Swal.fire('Erreur', 'Échec de communication avec le serveur', 'error');
        })
        .always(() => {
            $submitBtn.prop('disabled', false).html('Soumettre');
        });
    });
});
</script>
{% endblock %}