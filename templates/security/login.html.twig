{% extends 'base.html.twig' %}

{% block title %}Log in!{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
        .modal-backdrop {
            background-color: rgba(0, 0, 0, 0.5);
        }
        .captcha-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1050;
        }
        .captcha-modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .captcha-modal-content {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            max-width: 400px;
            width: 100%;
        }
        .loading {
            display: none;
            text-align: center;
            margin-top: 10px;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h1 class="h3 mb-3 font-weight-normal text-center">Please sign in</h1>

                    <form method="post" action="{{ path('app_login') }}" id="loginForm">
                        <div class="mb-3">
                            <label for="inputEmail" class="form-label">Email</label>
                            <input type="email" value="{{ last_username }}" name="_email" id="inputEmail" class="form-control" autocomplete="email" required autofocus>
                        </div>

                        <div class="mb-3">
                            <label for="inputPassword" class="form-label">Password</label>
                            <input type="password" name="_password" id="inputPassword" class="form-control" autocomplete="current-password" required>
                        </div>

                        <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">
                        <input type="hidden" name="_captcha" id="captchaInput">
                        <input type="hidden" name="_captcha_solution" id="captchaSolution">

                        <button class="btn btn-lg btn-primary w-100" type="submit" id="loginButton">
                            Sign in
                        </button>
                        <div class="loading" id="loading">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- CAPTCHA Modal -->
<div class="captcha-modal" id="captchaModal">
    <div class="captcha-modal-content">
        <h3 class="text-center mb-4">Please complete the CAPTCHA</h3>
        <div class="mb-3">
            <div class="d-flex align-items-center gap-2">
                <img src="{{ captcha.image_url }}" alt="CAPTCHA" class="border rounded" style="height: 50px;">
                <input type="text" id="inputCaptcha" class="form-control" required placeholder="Enter CAPTCHA">
            </div>
            <small class="text-muted">Please enter the characters shown in the image above</small>
        </div>
        <div class="text-center">
            <button class="btn btn-primary" id="verifyCaptcha">Verify</button>
        </div>
    </div>
</div>

{% if error %}
    <div class="error-message text-center mt-3">
        {{ error.messageKey|trans(error.messageData, 'security') }}
    </div>
{% endif %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const loginForm = document.getElementById('loginForm');
            const captchaModal = document.getElementById('captchaModal');
            const verifyButton = document.getElementById('verifyCaptcha');
            const captchaInput = document.getElementById('inputCaptcha');
            const captchaSolution = document.querySelector('input[name="_captcha_solution"]').value;
            const loading = document.getElementById('loading');
            const loginButton = document.getElementById('loginButton');

            loginForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Show loading spinner
                loading.style.display = 'block';
                loginButton.disabled = true;

                try {
                    // First validate credentials
                    const formData = new FormData(loginForm);
                    const response = await fetch('{{ path('app_login') }}', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    });

                    if (response.ok) {
                        // If credentials are valid, show CAPTCHA
                        captchaModal.classList.add('show');
                    } else {
                        // If credentials are invalid, show error
                        const data = await response.json();
                        alert(data.message || 'Invalid credentials');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred. Please try again.');
                } finally {
                    // Hide loading spinner
                    loading.style.display = 'none';
                    loginButton.disabled = false;
                }
            });

            verifyButton.addEventListener('click', function() {
                const userInput = captchaInput.value.trim().toUpperCase();
                const solution = captchaSolution.trim().toUpperCase();

                if (userInput === solution) {
                    // Set the CAPTCHA values in the hidden inputs
                    document.getElementById('captchaInput').value = userInput;
                    document.getElementById('captchaSolution').value = solution;
                    
                    // Submit the form
                    loginForm.submit();
                } else {
                    alert('Invalid CAPTCHA. Please try again.');
                    captchaInput.value = '';
                }
            });
        });
    </script>
{% endblock %} 